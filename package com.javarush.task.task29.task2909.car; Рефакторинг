package com.javarush.task.task29.task2909.car;

public class Cabriolet extends Car {
    public Cabriolet( int numberOfPassengers) {
        super(CABRIOLET, numberOfPassengers);
    }

    @Override
    public int getMaxSpeed() {
        final int MAX_CABRIOLET_SPEED = 90;
        return MAX_CABRIOLET_SPEED;
    }
}

_____________________________________________
package com.javarush.task.task29.task2909.car;

import java.util.Date;

public abstract class Car {
    static public final int TRUCK = 0;
    static public final int SEDAN = 1;
    static public final int CABRIOLET = 2;

    double fuel;

    public double summerFuelConsumption;
    public double winterFuelConsumption;
    public double winterWarmingUp;

    private int type;

    private boolean driverAvailable;
    private int numberOfPassengers;

    public static Car create(int type, int numberOfPassengers){
        Car car;
        if(type == TRUCK) car = new Truck(numberOfPassengers);
        else if(type == SEDAN) car = new Sedan(numberOfPassengers);
        else car = new Cabriolet(numberOfPassengers);
        return car;
    }
    protected Car(int type, int numberOfPassengers) {
        this.type = type;
        this.numberOfPassengers = numberOfPassengers;
    }

    public void fill(double numberOfLiters) {
        if (numberOfLiters < 0) throw new RuntimeException();
        fuel += numberOfLiters;
    }
    private boolean canPassengersBeTransferred(){
        if(isDriverAvailable() && fuel > 0) return true;
        return false;
    }

  public boolean isSummer(Date date , Date summerStart, Date summerEnd){
        if(date.before(summerStart) || date.after(summerEnd)) return false;
            return true;
  }

    public double getWinterConsumption(int length){
        return length * winterFuelConsumption + winterWarmingUp;
    }

    public double getSummerConsumption(int length){
        return length * summerFuelConsumption;
    }

    public double getTripConsumption(Date date, int length, Date SummerStart, Date SummerEnd) {
        double consumption;
        if(!isSummer(date, SummerStart, SummerEnd))
            consumption = getWinterConsumption(length);
        else consumption = getSummerConsumption(length);
        return consumption;
    }

    public int getNumberOfPassengersCanBeTransferred() {
        if (!canPassengersBeTransferred()) return 0;
        return numberOfPassengers;
    }

    public boolean isDriverAvailable() {
        return driverAvailable;
    }

    public void setDriverAvailable(boolean driverAvailable) {
        this.driverAvailable = driverAvailable;
    }

    public void startMoving() {
        if (numberOfPassengers > 0) {
            fastenPassengersBelts();
        }
            fastenDriverBelt();
    }

    public void fastenPassengersBelts() {
    }

    public void fastenDriverBelt() {
    }

    public abstract int getMaxSpeed();
}
_____________________________________________
package com.javarush.task.task29.task2909.car;

public class Sedan extends Car {
    @Override
    public int getMaxSpeed() {
        final int MAX_SEDAN_SPEED = 120;
        return MAX_SEDAN_SPEED;
    }

    public Sedan(int numberOfPassengers) {
        super(SEDAN, numberOfPassengers);

    }
    __________________________________________
package com.javarush.task.task29.task2909.car;

public class Truck extends Car {
    public Truck(int numberOfPassengers) {
        super(TRUCK, numberOfPassengers);
    }

    @Override
    public int getMaxSpeed() {
        final int MAX_TRUCK_SPEED = 80;
        return MAX_TRUCK_SPEED;
    }
}

________________________________________________
package com.javarush.task.task29.task2909.human;

public interface Alive {
   void live();
}
________________________________________________
package com.javarush.task.task29.task2909.human;

public class BloodGroup {

    private final int code;

    private BloodGroup(int code){
        this.code = code;
    }

    public int getCode() {
        return code;
    }
    public static BloodGroup first(){
        return new BloodGroup(1);
    }

    public static BloodGroup second(){
        return new BloodGroup(2);
    }
    public static BloodGroup third(){
        return new BloodGroup(3);
    }
    public static BloodGroup fourth(){
        return new BloodGroup(4);
    }
}

___________________________________________________
package com.javarush.task.task29.task2909.human;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Human implements Alive{
    private List<Human> children = new ArrayList<>();

    public List<Human> getChildren() {
        return Collections.unmodifiableList(children);
    }

    public void addChild(Human human){
        children.add(human);
    }

    public void removeChild(Human human){
        children.remove(human);
    }

    private static int nextId = 0;
    private int id;
    protected int age;
    protected String name;

    public Human( String name, int age) {
        this.name = name;
        this.age = age;
        this.id = nextId;
        id++;
    }

    protected Size size;

    public static class Size {
        public int height;
        public int weight;
    }

    private BloodGroup bloodGroup;

    public void setBloodGroup(BloodGroup bloodGroup) {
       this.bloodGroup = bloodGroup;
    }

    public BloodGroup getBloodGroup() {
        return bloodGroup;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void live(){

    }

    public int getId() {
        return id;
    }

    public void printSize() {
        System.out.println("Рост: " + size.height + " Вес: " + size.weight);
    }

   public String getPosition(){
        return "Человек";
   }

    public void printData() {
        System.out.println(getPosition() + ": " + name);
    }
}
_________________________________________________________
package com.javarush.task.task29.task2909.human;

public class Soldier extends Human{

    public Soldier(String name, int age){
        super(name, age);
    }

    public void live() {
        fight();
    }

    public void fight() {
    }
}
________________________________________________________
package com.javarush.task.task29.task2909.human;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class Student extends UniversityPerson {

    private double averageGrade;
    private Date beginningOfSession;
    private Date endOfSession;
    private int course;

    public Student(String name, int age, double averageGrade) {
        super(name, age);
        this.averageGrade = averageGrade;
    }


    public void live() {
        learn();
    }

    public void learn() {
    }

    public void incAverageGrade(double delta){
        setAverageGrade(getAverageGrade() + delta);
    }

   public void setCourse (int course){
           this.course = course;
       }

   public void setAverageGrade(double averageGrade){
       this.averageGrade = averageGrade;
   }


    public void setBeginningOfSession(Date date) {
        beginningOfSession = date;
    }

    public void setEndOfSession(Date date) {
        endOfSession = date;
    }

    public double getAverageGrade() {
        return averageGrade;
    }

    public int getCourse() {
        return course;
    }
    public String getPosition(){
        return "Студент";
    }
}
__________________________________________________________
package com.javarush.task.task29.task2909.human;

import java.util.ArrayList;
import java.util.List;

public class StudentsDataBase {
    public static List<Student> students = new ArrayList<>();

    public static void addInfoAboutStudent(Student student) {
        students.add(student);
        printInfoAboutStudent(student);

    }

    public static void printInfoAboutStudent(Student student) {
        System.out.println("Имя: " + student.getName() + " Возраст: " + student.getAge());
    }

    public static void removeStudent(int index) {
        if (index >= 0 && students.size() > index) students.remove(index);
    }

    public static void findDimaOrSasha() {
        // boolean found = false;
        for (int i = 0; i < students.size(); i++) {

            if (students.get(i).getName().equals("Dima")) {
                System.out.println("Студент Dima есть в базе.");
                break;
            }

            if (students.get(i).getName().equals("Sasha")) {
                System.out.println("Студент Sasha есть в базе.");
                break;
            }
        }
    }
}
_________________________________________________________
package com.javarush.task.task29.task2909.human;

import java.util.ArrayList;
import java.util.List;

public class Teacher extends UniversityPerson {

    private int numberOfStudents;


    public Teacher(String name, int age, int numberOfStudents) {
        super(name, age);
        this.numberOfStudents = numberOfStudents;
    }

    public void live() {
        teach();
    }

    public void teach() {
    }

    public String getPosition(){
        return "Преподаватель";
    }
}
_____________________________________________________________
package com.javarush.task.task29.task2909.human;

import java.util.ArrayList;
import java.util.List;

public class University  {

    public String name;
    public int age;

    public University(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public List<Student> getStudents() {
        return students;
    }

    public void setStudents(List<Student> students) {
        this.students = students;
    }

    private List<Student> students = new ArrayList<Student>();

    public Student getStudentWithAverageGrade(double averageGrade) {
        for(Student student : students){
            if(student.getAverageGrade() == averageGrade){
                return student;
            }
        }
        return null;
    }

    public Student getStudentWithMaxAverageGrade() {
        double maxAverageGrade = 0;
        for(Student student : students){
            if(student.getAverageGrade() > maxAverageGrade){
                maxAverageGrade = student.getAverageGrade();
            }
        }
        return getStudentWithAverageGrade(maxAverageGrade);
    }

    public Student getStudentWithMinAverageGrade() {
        double minAverageGrade = students.get(0).getAverageGrade();

        for(Student student : students){
            if(student.getAverageGrade() < minAverageGrade){
                minAverageGrade = student.getAverageGrade();
            }
        }
        return getStudentWithAverageGrade(minAverageGrade);
    }

    public void expel(Student student){
        students.remove(student);
    }
}
_________________________________________________________
package com.javarush.task.task29.task2909.human;

public class UniversityPerson extends Human{

    private University university;

    public UniversityPerson(String name, int age){
        super(name, age);
    }

    public University getUniversity() {
        return university;
    }

    public void setUniversity(University university) {
        this.university = university;
    }
}
____________________________________________________________
package com.javarush.task.task29.task2909.human;

public class Worker extends Human{

    private double salary;
    private String company;

    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    public Worker(String name, int age) {
        super(name, age);
    }

    public void live() {
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }
}
_____________________________________________
package com.javarush.task.task29.task2909.user;

public class Address {

    private String country;
    private String city;

    private String house;

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getHouse() { return house; }

    public void setHouse(String house) { this.house = house; }
}
________________________________________________
package com.javarush.task.task29.task2909.user;

public class User {

    private String name;
    private String surname;
    private int age;

    private Address address;

    private Work work;

    public boolean isMan() {
        return man;
    }

    public void setMan(boolean man) {
        this.man = man;
    }

    private boolean man;

    public User(String name, String surname, int age) {
        this.name = name;
        this.surname = surname;
        this.age = age;
    }

   public void printInfo(){
       System.out.println("Имя: " + this.getName());
       System.out.println("Фамилия: " + this.getSurname());
   }
    public void printAdditionalInfo() {
        if (this.getAge() < 16)
            System.out.println("Пользователь моложе 16 лет");
        else
            System.out.println("Пользователь старше 16 лет");
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getAddress() {
        return address.getCountry() + " " + address.getCity() + " " + address.getHouse();
    }

    public String getBoss() {
        return work.getBoss();
    }

    public String getCountry() {
        return address.getCountry();
    }

    public void setCountry(String country) {
        this.address.setCountry(country);
    }

    public String getCity() {
        return address.getCity();
    }

    public void setCity(String city) {
        this.address.setCity(city);
    }

    public Work getWork() {
        return work;
    }

    public void setWork(Work work) {
        this.work = work;
    }
}
_________________________________________________________
package com.javarush.task.task29.task2909.user;

import java.util.concurrent.atomic.AtomicInteger;

public class UserHelper {
    private User userAnya = new User("Аня", "Смирнова", 10);
    private User userRoma = new User("Рома", "Виноградов", 30);

    public void printUsers() {
        userAnya.printInfo();
        userAnya.printAdditionalInfo();

        userRoma.printInfo();
        userRoma.printAdditionalInfo();
    }

    public int calculateAverageAge() {
//        int age = 28;
        User userUra = new User("Юра", "Карп", 28);
        return (userAnya.getAge() + userRoma.getAge() + userUra.getAge()) / 3;
    }

    public int calculateRate(AtomicInteger base, int age, boolean hasWork, boolean hasHouse) {
        /*
        base.set(base.get() + age / 100);
        base.set((int) (base.get() * (hasWork ? 1.1 : 0.9)));
        base.set((int) (base.get() * (hasHouse ? 1.1 : 0.9)));
        */

        int rate = base.get() + age / 100;
        rate = ((int) (rate * (hasWork ? 1.1 : 0.9)));
        rate = ((int) (rate * (hasHouse ? 1.1 : 0.9)));
        return rate;
    }

    public String getBossName(User user) {
        return user.getBoss();
    }
}
_______________________________________________________________
package com.javarush.task.task29.task2909.user;

public class Work {
    private String boss;

    public String getBoss() {
        return boss;
    }

    public void setBoss(String boss) {
        this.boss = boss;
    }
}

